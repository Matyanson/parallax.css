/*  inspiration
    https://keithclark.co.uk/articles/pure-css-parallax-websites/
    https://segmentfault.com/a/1190000040563987/en
*/
html {
    overflow: hidden; /*move scrollbar to body tag*/
}
/*---global vars---*/
:root {
    --p-align: 50;
    --p-depth: 1;
    --p-scale: 1;
    --p-transform: ;
}
/*---parallax container---*/
body,
.prx_container,
.prx_container_x,
.prx_container_y {
    perspective: 2px;
}
/*  account for scrollbar width: 17px
    https://codepen.io/sambible/post/browser-scrollbar-widths    */
body,
.prx_container_y {
    perspective-origin: calc((100% - 17px) * var(--p-align) / 100) 0%;    
    overflow-x: hidden;
    overflow-y: auto;
    height: 100vh;
}
.prx_container_x {
    perspective-origin: 0% calc((100% - 17px) * var(--p-align) / 100);
    overflow-x: auto;
    overflow-y: hidden;
    width: 100vw;
    height: unset;
}

/*---parallax items---*/
.prx_group {
    transform-style: preserve-3d;
}
.prx_fit {
    display: block;
    object-fit: cover;
    --p-scale-to-fit-above1: calc(
        (100*var(--p-scale-adjust) + var(--p-size) - 100) /
        (var(--p-scale-adjust) * var(--p-size))
    );
    /*  a: scale-adjust; b: size(vh)
        (a+b-1) / ab    */
    --p-scale-to-fit-below1: calc(
        -1* 
        (100*var(--p-scale-adjust) - var(--p-size) - 100) /
        (var(--p-scale-adjust) * var(--p-size))
    );
    /*  a: scale-adjust; b: size(vh)
        -(a-b-1) / (ab)    */
    --p-scale-to-fit: max(var(--p-scale-to-fit-above1), var(--p-scale-to-fit-below1));
}
body .prx_fit,
.prx_container_y .prx_fit {
    height: calc(var(--p-size, unset) * 1vh);
    /* center even if oversized (not using translate) */
    --p-center-shift: calc((1% - 1% / var(--p-scale-to-fit)) * var(--p-align));
    left: var(--p-center-margin);           /*make sure it is relative*/
    width: calc(100% / var(--p-scale-to-fit, 1));
}
.prx_container_x .prx_fit {
    width: calc(var(--p-size, unset) * 1vw);
    --p-center-shift: calc((1% - 1% / var(--p-scale-to-fit)) * var(--p-align));
    left: var(--p-center-margin);
    height: calc(100% / var(--p-scale-to-fit, 1));
}
body [prx],
.prx_container_y [prx] {
    transform-origin: 
    var(--p-origin)
    calc( clamp(-0.01, var(--p-depth), 0) * -10000%);
    /*  if depth is negative transform-origin-y is 100%
        clamp is not available for 3.27% of global users
    */
}
.prx_container_x [prx] {
    transform-origin:
    calc( clamp(-0.01, var(--p-depth), 0) * -10000%)
    var(--p-origin);
}
[prx] {
    --p-scale-adjust: calc(1 + var(--p-depth, 1) / 2);
    /*1 + (translateZ * -1) / perspective*/
    --p-scale-complete: calc(var(--p-scale-adjust) * var(--p-scale-to-fit, 1) * var(--p-scale, 1));
    --origin-shift: calc(
        100% *
        var(--p-scale-adjust)*(var(--p-scale) - 1) /
        (2*(var(--p-scale-complete) - 1))
    );
    /*  a: scale-adjust; b: scale
        a*(b-1) / (2*(Ä‘ab-1))    */
    --p-origin: calc(
        1% * var(--p-align) + 
        (50 - var(--p-align)) / 50 * var(--origin-shift)
    );
    /*  y: origin-shift; z: align
        z + ((50-z)/50) * y    */
    transform:
    translateZ(calc(var(--p-depth, 1) * -1px))
    scale(var(--p-scale-complete))
    var(--p-transform);
    position: relative;
    z-index: -1;
}
[prx="0"] {
    transform: unset;
}
[prx="1"] {
    transform: translateZ(-1px)
    scale(calc(1 + (-1 * -1) / 2));
}
[prx="2"] {
    transform: translateZ(-2px)
    scale(calc(1 + (-2 * -1) / 2));
}
[prx="3"] {
    transform: translateZ(-3px)
    scale(calc(1 + (-3 * -1) / 2));
}
[prx="4"] {
    transform: translateZ(-4px)
    scale(calc(1 + (-4 * -1) / 2));
}
[prx="5"] {
    transform: translateZ(-5px)
    scale(calc(1 + (-5 * -1) / 2));
}
[prx="6"] {
    transform: translateZ(-6px)
    scale(calc(1 + (-6 * -1) / 2));
}

[prx="-1"] {
    transform: translateZ(0.3px)
    scale(calc(1 + (0.3 * -1) / 2));
}
[prx="-2"] {
    transform: translateZ(0.6px)
    scale(calc(1 + (0.6 * -1) / 2));
}
[prx="-3"] {
    transform: translateZ(0.9px)
    scale(calc(1 + (0.9 * -1) / 2));
}
[prx="-4"] {
    transform: translateZ(1.2px)
    scale(calc(1 + (1.2 * -1) / 2));
}
[prx="-5"] {
    transform: translateZ(1.5px)
    scale(calc(1 + (1.5 * -1) / 2));
}
[prx="-6"] {
    transform: translateZ(1.8px)
    scale(calc(1 + (1.8 * -1) / 2));
}